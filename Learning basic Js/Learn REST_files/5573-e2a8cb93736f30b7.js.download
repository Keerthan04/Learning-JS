"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5573],{35573:function(n,e,t){t.d(e,{P:function(){return gql}});var r=t(73846),s={"\n  query cheatsheetEnterpriseModuleBySlug($slug: String) {\n    enterpriseModule(slug: $slug) {\n      id\n      slug\n      title\n      cheatsheetId\n      reviewCards {\n        id\n        title\n        body\n        images {\n          alt\n          url\n        }\n        codeSnippets {\n          id\n          language\n          text\n        }\n      }\n    }\n  }\n":r.$Qt,"\n  mutation upsertCompletion($input: UpsertCompletionInput!) {\n    upsertCompletion(input: $input) {\n      record {\n        containerId\n      }\n    }\n  }\n":r.f9T,"\n  query article($slug: String!) {\n    article(slug: $slug) {\n      ...articleData\n      body\n      paths {\n        ...rawPathCardData\n        released\n      }\n      tracks {\n        ...rawCourseCardData\n        released\n      }\n    }\n  }\n":r.QFn,"\n  query articlesByCategory($slug: String!) {\n    category(slug: $slug) {\n      articles {\n        ...articleData\n      }\n      ...articleCategoryData\n    }\n  }\n":r.z4c,"\n  query allArticles {\n    articles {\n      ...articleData\n    }\n  }\n":r.DlW,"\n  query articleSitemap {\n    articles {\n      slug\n    }\n  }\n":r.lPe,'\n  query articleCategoriesSitemap {\n    categories(classification: ["language", "subject"]) {\n      slug\n      classification\n      articleCount: contentItemCount(contentItemType: Article)\n    }\n  }\n':r.aAZ,"\n  fragment articleCategoryData on Category {\n    classification\n    slug\n    title\n  }\n":r.p9d,"\n  fragment articleData on Article {\n    categories {\n      ...articleCategoryData\n    }\n    description\n    slug\n    title\n    createdAt\n  }\n":r.fE3,'\n  query articleCategories {\n    languages: categories(\n      classification: ["language"]\n      order: { by: TITLE, direction: ASC }\n    ) {\n      ...articleCategoryData\n      articleCount: contentItemCount(contentItemType: Article)\n    }\n    subjects: categories(\n      classification: ["subject"]\n      order: { by: TITLE, direction: ASC }\n    ) {\n      ...articleCategoryData\n      articleCount: contentItemCount(contentItemType: Article)\n    }\n  }\n':r.zOp,"\n  query enterpriseModule($slug: String, $draft: Boolean) {\n    enterpriseModule(slug: $slug, draft: $draft) {\n      contentItemIds\n      title\n      id\n      shortDescription\n      skills\n      prerequisites\n      prerequisitesCount\n      difficulty\n      slug\n      timeToComplete\n      reviewCardCount\n      lessonCount: contentItemCount(contentItemType: Lesson)\n      contentItems {\n        ... on Lesson {\n          id\n          exercises {\n            id\n            title\n            slug\n          }\n        }\n        ... on ContentItemInterface {\n          title\n          slug\n          id\n          type\n          enterpriseModules {\n            title\n            slug\n            type\n            id\n          }\n        }\n      }\n      enrollmentStatusV2\n    }\n  }\n":r.XHo,"\n  query contentItemProgresses($contentItemIds: [ID!]!, $userIds: [ID!]!) {\n    contentItemProgresses(contentItemIds: $contentItemIds, userIds: $userIds) {\n      contentItemId\n      started\n      completed\n      state {\n        bookmark\n        attempts {\n          at\n          correct\n          total\n        }\n      }\n    }\n  }\n":r.cj3,"\n  mutation ResetModuleProgresses($input: UpsertProgressItemsInput!) {\n    upsertProgressItems(input: $input) {\n      records {\n        id\n        contentItemId\n      }\n    }\n  }\n":r.Psf,"\n  mutation enrollContainer($container: EnrollmentInput!) {\n    enrollContainer(container: $container) {\n      record {\n        id\n        type\n        createdAt\n        updatedAt\n      }\n      errors {\n        message\n      }\n    }\n  }\n":r.$YH,"\n  mutation enrollInContainerV2($input: InsertEnterpriseModuleEnrollmentInput!) {\n    insertEnterpriseModuleEnrollment(input: $input) {\n      record {\n        userId\n        id\n      }\n      error {\n        message\n      }\n    }\n  }\n":r.zDe,"\n  fragment careerJourneyTrackData on Track {\n    id\n    title\n    slug\n  }\n\n  fragment careerJourneyPathData on Path {\n    id\n    slug\n    title\n    shortDescription\n    trackIds\n    tracks {\n      ...careerJourneyTrackData\n    }\n  }\n":r.Yfs,"\n  query careerJourney($slug: String!) {\n    journey(slug: $slug) {\n      ...careerJourneyData\n    }\n  }\n\n  fragment careerJourneyData on Journey {\n    alertCta\n    alertType\n    alertDescription\n    alertCtaDestination\n    id\n    difficulty\n    description\n    pathIds\n    slug\n    title\n    shortDescription\n    paths {\n      id\n      trackIds\n    }\n  }\n":r.MXS,"\n  query paths($id: [ID!]) {\n    paths(id: $id, includeUnreleased: true) {\n      ...careerJourneyPathData\n    }\n  }\n":r.R8j,"\n  query path($slug: String!) {\n    path(slug: $slug) {\n      ...careerJourneyPathData\n    }\n  }\n":r.ATg,"\n  query track($slug: String) {\n    track(slug: $slug) {\n      ...trackData\n    }\n  }\n\n  fragment articleContentItemData on Article {\n    id\n    slug\n    title\n    type\n  }\n  fragment externalResourceContentItemData on ExternalResource {\n    id\n    slug\n    title\n    type\n    resourceType\n  }\n  fragment informationalContentItemData on Informational {\n    id\n    slug\n    title\n    type\n  }\n  fragment kanbanContentItemData on KanbanProject {\n    id\n    slug\n    title\n    type\n  }\n  fragment lessonContentItemData on Lesson {\n    id\n    slug\n    title\n    type\n  }\n  fragment projectContentItemData on Project {\n    id\n    slug\n    title\n    type\n  }\n  fragment quizContentItemData on Quiz {\n    id\n    slug\n    title\n    type\n  }\n  fragment videoContentItemData on VideoContentItem {\n    id\n    slug\n    title\n    type\n  }\n\n  fragment contentItemData on ContentItem {\n    ...articleContentItemData\n    ...externalResourceContentItemData\n    ...informationalContentItemData\n    ...kanbanContentItemData\n    ...lessonContentItemData\n    ...projectContentItemData\n    ...quizContentItemData\n    ...videoContentItemData\n  }\n\n  fragment contentModuleData on ContentModule {\n    id\n    title\n    shortDescription\n    slug\n    reviewCardIds\n    contentItems {\n      ...contentItemData\n    }\n  }\n\n  fragment trackData on Track {\n    id\n    slug\n    title\n    shortDescription\n    longDescription\n    paths(includeUnreleased: true) {\n      slug\n    }\n    contentModules {\n      ...contentModuleData\n    }\n  }\n":r.rzW,"\n  fragment catalogCategoryData on Category {\n    type: __typename\n    slug\n    categoryType: classification\n    title\n  }\n":r.Kh5,'\n  query catalogHome {\n    me {\n      ...catalogUserData\n    }\n    catalogHome {\n      inspiredSection {\n        heading\n        resources {\n          ...resourceData\n        }\n      }\n      newAndNoteworthy {\n        cards {\n          content {\n            ...pathData\n            ...catalogTrackData\n            ...catalogCategoryData\n          }\n        }\n        featured {\n          backgroundImageUrl\n          description\n          superTitle\n          title\n          url\n        }\n        heading\n      }\n    }\n\n    paginatedCategories(\n      paginate: { page: 1, perPage: 10 }\n      order: { by: VISIT_COUNT, direction: DESC }\n    ) {\n      collection {\n        categoryType: classification\n        slug\n        title\n      }\n    }\n\n    paginatedTracks(\n      paginate: { page: 1, perPage: 50 }\n      order: { by: SUBMIT_COUNT, direction: DESC }\n      onlyStandalone: true\n    ) {\n      collection {\n        ...catalogTrackData\n      }\n    }\n\n    subjectFilters: categories(\n      classification: "subject"\n      filter: {\n        operator: OR\n        releasedPathCount: { gt: 0 }\n        releasedTrackCount: { gt: 0 }\n      }\n    ) {\n      title\n      slug\n      type: classification\n    }\n    languageFilters: categories(\n      classification: "language"\n      filter: {\n        operator: OR\n        releasedPathCount: { gt: 0 }\n        releasedTrackCount: { gt: 0 }\n      }\n    ) {\n      title\n      slug\n      type: classification\n    }\n\n    careerPaths: paths(\n      goal: "career"\n      onlyStandalone: true\n      order: { by: SUBMIT_COUNT, direction: DESC }\n    ) {\n      ...pathData\n    }\n  }\n':r.vx9,'\n  query aiContent {\n    aiContent: categories(slug: "artificial-intelligence") {\n      tracks(onlyStandalone: true) {\n        ...catalogTrackData\n      }\n      paths {\n        ...pathData\n      }\n    }\n  }\n':r.kwU,"\n  fragment catalogUserData on User {\n    id\n    organizationMemberships {\n      id\n      name\n      canViewOrganizationalContent\n    }\n    canAccessCareerPaths\n  }\n":r.Xhv,"\n  fragment pathData on Path {\n    type: __typename\n    createdAt\n    shortDescription\n    difficulty\n    id\n    enrollmentStatus\n    completedByMe\n    lessonCount: contentItemCount(contentItemType: Lesson)\n    projectCount: contentItemCount(contentItemType: Project)\n    portfolioProjectCount: contentItemCount(contentItemType: KanbanProject)\n    slug\n    title\n    goal\n    trackCount\n    metrics {\n      submitCount\n      medianDurationHours\n    }\n  }\n":r.m9L,"\n  fragment catalogTrackData on Track {\n    type: __typename\n    createdAt\n    shortDescription\n    difficulty\n    id\n    enrollmentStatus\n    completedByMe\n    lessonCount: contentItemCount(contentItemType: [Lesson])\n    projectCount: contentItemCount(contentItemType: [Project])\n    portfolioProjectCount: contentItemCount(contentItemType: [KanbanProject])\n    pro: proExclusive\n    slug\n    title\n    grantsCertificate\n    metrics {\n      submitCount\n      medianDurationHours\n    }\n  }\n":r.rX7,"\n  fragment resourceImage on ContentfulImage {\n    id\n    alt\n    image\n  }\n":r.bnO,"\n  fragment resourceData on Resource {\n    id\n    type\n    title\n    url\n    squareImage {\n      ...resourceImage\n    }\n    standardImage {\n      ...resourceImage\n    }\n  }\n":r.m7u,"\n  query extOrgCatalog($organizationId: [String!]!) {\n    paths(organizationId: $organizationId, includeUnpublished: false) {\n      organizationId\n      title\n      categories {\n        title\n      }\n      id\n      articleCount: contentItemCount(contentItemType: [Article])\n      lessonCount: contentItemCount(contentItemType: Lesson)\n      quizCount: contentItemCount(contentItemType: Quiz)\n      slug\n      type: __typename\n    }\n    tracks(\n      organizationId: $organizationId\n      onlyStandalone: true\n      includeUnpublished: false\n    ) {\n      organizationId\n      title\n      categories {\n        title\n      }\n      id\n      articleCount: contentItemCount(contentItemType: Article)\n      lessonCount: contentItemCount(contentItemType: Lesson)\n      quizCount: contentItemCount(contentItemType: Quiz)\n      slug\n      type: __typename\n    }\n  }\n":r.Jld,'\n  query fullCatalog {\n    me {\n      ...catalogUserData\n    }\n\n    subjectFilters: categories(\n      classification: "subject"\n      filter: {\n        operator: OR\n        releasedPathCount: { gt: 0 }\n        releasedTrackCount: { gt: 0 }\n      }\n    ) {\n      title\n      slug\n      type: classification\n    }\n    languageFilters: categories(\n      classification: "language"\n      filter: {\n        operator: OR\n        releasedPathCount: { gt: 0 }\n        releasedTrackCount: { gt: 0 }\n      }\n    ) {\n      title\n      slug\n      type: classification\n    }\n\n    careerPaths: paths(\n      goal: "career"\n      onlyStandalone: true\n      order: { by: SUBMIT_COUNT, direction: DESC }\n    ) {\n      ...pathData\n    }\n\n    skillPaths: paths(\n      goal: "skill"\n      onlyStandalone: true\n      order: { by: SUBMIT_COUNT, direction: DESC }\n    ) {\n      ...pathData\n    }\n\n    courses: tracks(\n      order: { by: SUBMIT_COUNT, direction: DESC }\n      onlyStandalone: true\n    ) {\n      ...catalogTrackData\n    }\n  }\n':r.Sqd,'\n  query hubPage($slug: String!) {\n    me {\n      ...catalogUserData\n    }\n    catalogHubPage(slug: $slug) {\n      slug\n      title\n      description\n      beginnerSection {\n        blogPost {\n          datePublished\n          title\n          href\n        }\n        content {\n          ... on Path {\n            ...pathData\n          }\n          ... on Track {\n            ...catalogTrackData\n          }\n        }\n      }\n      relatedTopics {\n        slug\n        title\n        type\n      }\n      featuredResources {\n        ...resourceData\n      }\n      allResources {\n        ...resourceData\n      }\n    }\n    category(slug: $slug) {\n      type: classification\n      tracks(onlyStandalone: true) {\n        ...catalogTrackData\n      }\n      paths {\n        ...pathData\n      }\n    }\n\n    popularCategories: paginatedCategories(\n      order: { by: VISIT_COUNT, direction: DESC }\n      paginate: { perPage: 15, page: 1 }\n      classification: ["language", "subject"]\n    ) {\n      collection {\n        title\n        slug\n        type: classification\n      }\n    }\n  }\n':r.DkP,"\n  fragment challengeData on Lesson {\n    id\n    title\n    description\n    slug\n    categories {\n      id\n      classification\n      title\n    }\n  }\n":r.Z9c,"\n  query challenges($slug: [String!]) {\n    lessons(slug: $slug) {\n      ...challengeData\n    }\n  }\n":r.mUE,"\n  query moduleBySlug($slug: [String!]) {\n    contentModules(slug: $slug) {\n      id\n      slug\n      title\n      reviewCards {\n        id\n        title\n        body\n        images {\n          alt\n          url\n        }\n        codeSnippets {\n          id\n          language\n          text\n        }\n      }\n      tracks {\n        ...rawCourseCardData\n        released\n      }\n      paths {\n        ...rawPathCardData\n        released\n      }\n    }\n  }\n":r.aD,"\n  query courseBySlug($slug: [String!]) {\n    tracks(slug: $slug, includeUnreleased: true) {\n      id\n      slug\n      title\n      contentModules {\n        id\n        slug\n        title\n        reviewCards {\n          id\n        }\n      }\n    }\n  }\n":r.kFN,"\n  fragment tracksData on Track {\n    id\n    slug\n    title\n    paths {\n      title\n    }\n    contentModules {\n      slug\n      reviewCardIds\n    }\n  }\n":r.LRs,"\n  query allCheatsheets {\n    tracks {\n      ...tracksData\n    }\n  }\n":r.UPO,"\n  query cheatsheetsByCategory($slug: String) {\n    category(slug: $slug) {\n      classification\n      slug\n      title\n      tracks {\n        ...tracksData\n      }\n    }\n  }\n":r.k$d,"\n  query cheatsheetsSitemap {\n    tracks {\n      slug\n      contentModules {\n        slug\n      }\n    }\n  }\n":r.tUp,"\n  query getCourseLandingPageData($id: ID, $slug: String) {\n    track(id: $id, slug: $slug) {\n      id\n      slug\n      title\n      shortDescription\n      articleCount: contentItemCount(contentItemType: Article)\n      lessonCount: contentItemCount(contentItemType: Lesson)\n      projectCount: contentItemCount(contentItemType: Project)\n      kanbanProjectCount: contentItemCount(contentItemType: KanbanProject)\n      videoCount: contentItemCount(contentItemType: Video)\n      quizCount: contentItemCount(contentItemType: Quiz)\n      externalResourceCount: contentItemCount(contentItemType: ExternalResource)\n      longDescription\n      alertDescription\n      alertType\n      alertCta\n      alertCtaDestination\n      difficulty\n      grantsCertificate\n      partnerLogo\n      partnerUrl\n      partnerTagline\n      prerequisiteTracks {\n        id\n        slug\n        title\n      }\n      proExclusive\n      released\n      modules: contentModules {\n        id\n        slug\n        title\n        shortDescription\n        contentItemIds\n      }\n      contentItems {\n        ... on ContentItemInterface {\n          id\n          isFree\n          slug\n          title\n          type\n        }\n        ... on Project {\n          description\n          tracks {\n            slug\n          }\n        }\n      }\n      categories {\n        slug\n      }\n      metrics {\n        medianDurationHours\n      }\n    }\n  }\n":r.hyX,"\n  query getPathLandingPageData($slug: String) {\n    path(slug: $slug) {\n      id\n      slug\n      title\n      shortDescription\n      description\n      completionTime\n      organizationId\n      articleCount: contentItemCount(contentItemType: Article)\n      lessonCount: contentItemCount(contentItemType: Lesson)\n      projectCount: contentItemCount(contentItemType: Project)\n      kanbanProjectCount: contentItemCount(contentItemType: KanbanProject)\n      videoCount: contentItemCount(contentItemType: Video)\n      quizCount: contentItemCount(contentItemType: Quiz)\n      externalResourceCount: contentItemCount(contentItemType: ExternalResource)\n      alertDescription\n      alertType\n      alertCta\n      alertCtaDestination\n      difficulty\n      released\n      metrics {\n        medianDurationHours\n      }\n      goal\n      journeys {\n        id\n      }\n      tracks {\n        id\n        slug\n        title\n        shortDescription\n      }\n      modules: contentModules {\n        id\n        slug\n        title\n        shortDescription\n        contentItemIds\n      }\n      contentItems {\n        ... on ContentItemInterface {\n          id\n          isFree\n          slug\n          title\n          type\n        }\n        ... on Project {\n          description\n          tracks {\n            slug\n          }\n        }\n      }\n      categories {\n        slug\n      }\n    }\n  }\n":r.frM,"\n  query articleDataBySlugs($slugs: [String!]!) {\n    articles(slug: $slugs) {\n      slug\n      title\n      description\n    }\n  }\n":r.i3K,"\n  query events {\n    upcomingEvents: liveEvents(\n      onlyUpcoming: true\n      order: { by: START_TIME, direction: ASC }\n    ) {\n      ...eventsData\n    }\n    archivedEvents: liveEvents(\n      onlyArchived: true\n      order: { by: START_TIME, direction: DESC }\n    ) {\n      ...eventsData\n    }\n  }\n\n  fragment eventsData on LiveEvent {\n    id\n    title\n    startTime\n    shortDescription\n    url\n    slug\n  }\n":r.jbw,"query PracticeInterview($id: ID!) {\n  practiceInterview(id: $id) {\n    feedback {\n      didWell\n      feedback\n      interviewerName\n      position\n      rating\n      toImprove\n      type\n    }\n    messages {\n      role\n      content\n    }\n    createdAt\n    id\n    updatedAt\n  }\n}":r.iKz,"query PracticeInterviews {\n    me {\n      practiceInterviews {\n        feedback {\n          didWell\n          feedback\n          interviewerName\n          position\n          rating\n          toImprove\n          type\n        }\n        messages {\n          role\n          content\n        }\n        createdAt\n        id\n        updatedAt\n      }\n    }\n  }":r.ii_,"\n  mutation CreatePracticeInterview(\n    $feedback: InterviewFeedbackInput!\n    $messages: [InterviewMessageInput!]!\n  ) {\n    createPracticeInterview(feedback: $feedback, messages: $messages) {\n      practiceInterview {\n        feedback {\n          didWell\n          feedback\n          interviewerName\n          position\n          rating\n          toImprove\n          type\n          jobDescription\n          experience\n        }\n        messages {\n          role\n          content\n        }\n        createdAt\n        id\n        updatedAt\n      }\n    }\n  }\n":r.qGB,"\n  fragment careerJourneyPathTruncatedData on Path {\n    id\n    title\n    shortDescription\n    trackIds\n  }\n":r.ke3,"\n  query pathsTruncated($id: [ID!]) {\n    paths(id: $id, includeUnreleased: true) {\n      ...careerJourneyPathTruncatedData\n    }\n  }\n":r.lX1,"\n  fragment careerJourneyTruncatedData on Journey {\n    id\n    title\n    shortDescription\n    paths {\n      id\n      trackIds\n    }\n  }\n":r.ubV,"\n  query careerJourneyTruncatedById($id: ID) {\n    journey(id: $id) {\n      ...careerJourneyTruncatedData\n    }\n  }\n":r.sa3,"\n  query onboardingUser {\n    me {\n      id\n      type\n      email\n    }\n  }\n":r.OLF,"\n  mutation editOnboardingQuestionnaire(\n    $onboardingQuestionnaireParams: OnboardingQuestionnaireInput!\n  ) {\n    editOnboardingQuestionnaire(\n      onboardingQuestionnaireParams: $onboardingQuestionnaireParams\n    ) {\n      errors {\n        message\n      }\n      onboardingQuestionnaire {\n        careerInterest\n        createdAt\n        id\n        knowledge\n        purpose\n        updatedAt\n      }\n    }\n  }\n":r.QAK,"\n  fragment projectCategoryData on Category {\n    classification\n    slug\n    title\n  }\n":r.iDx,"\n  fragment practiceProjectData on Project {\n    categories {\n      ...projectCategoryData\n    }\n    description\n    id\n    isDeprecated\n    isFree\n    published\n    slug\n    time\n    title\n    type\n  }\n":r.la1,"\n  fragment kanbanProjectData on KanbanProject {\n    categories {\n      ...projectCategoryData\n    }\n    description\n    id\n    isDeprecated\n    isFree\n    published\n    slug\n    time\n    title\n    type\n  }\n":r.oCZ,'\n  query projectsByCategory($slug: String!) {\n    challenge: contentItems(belongingToAllCategorySlugs: [$slug, "challenge"]) {\n      ...practiceProjectData\n      ...kanbanProjectData\n    }\n    portfolio: contentItems(belongingToAllCategorySlugs: [$slug, "portfolio"]) {\n      ...practiceProjectData\n      ...kanbanProjectData\n    }\n    practice: contentItems(belongingToAllCategorySlugs: [$slug, "practice"]) {\n      ...practiceProjectData\n      ...kanbanProjectData\n    }\n  }\n':r.TL6,'\n  query practiceProjectsByCategory($slug: String!) {\n    challenge: contentItems(belongingToAllCategorySlugs: [$slug, "challenge"]) {\n      ...practiceProjectData\n      ...kanbanProjectData\n    }\n    practice: contentItems(belongingToAllCategorySlugs: [$slug, "practice"]) {\n      ...practiceProjectData\n      ...kanbanProjectData\n    }\n  }\n':r.EIP,'\n  query portfolioProjectsByCategory($slug: String!) {\n    portfolio: contentItems(belongingToAllCategorySlugs: [$slug, "portfolio"]) {\n      ...practiceProjectData\n      ...kanbanProjectData\n    }\n  }\n':r._2M,"\n  query project($slug: String!) {\n    project(slug: $slug) {\n      ...practiceProjectData\n    }\n  }\n":r.nvD,"\n  query kanbanProject($slug: String!) {\n    kanbanProject(slug: $slug) {\n      ...kanbanProjectData\n    }\n  }\n":r.Dy2,'\n  query projectCategories {\n    language: categories(\n      classification: ["language"]\n      order: { by: TITLE, direction: ASC }\n    ) {\n      ...categoryData\n    }\n    subject: categories(\n      classification: ["subject"]\n      order: { by: TITLE, direction: ASC }\n    ) {\n      ...categoryData\n    }\n  }\n\n  fragment categoryData on Category {\n    classification\n    portfolioProjectCount: contentItemCount(contentItemType: KanbanProject)\n    practiceProjectCount: contentItemCount(contentItemType: Project)\n    slug\n    title\n  }\n':r.E31,"\n  query Search($query: String!) {\n    siteSearch(query: $query) {\n      searchId\n      articles {\n        id\n        type\n        title\n        description\n        slug\n      }\n      catalogContent {\n        type\n        id\n        title\n        shortDescription\n        slug\n        difficulty\n        lessonCount\n        enrollmentStatus\n        tag\n        pro\n        goal\n        grantsCertificate\n        imageUrl\n        trackCount\n        medianDurationHours\n      }\n      docs {\n        description\n        title\n        slug\n        path\n        type: __typename\n      }\n    }\n  }\n":r.t4P,"\n  fragment rawPathCardData on Path {\n    id\n    slug\n    goal\n    title\n    lessonCount: contentItemCount(contentItemType: [Lesson])\n    trackCount\n    enrollmentStatus\n    shortDescription\n    difficulty\n    metrics {\n      medianDurationHours\n    }\n  }\n":r.QvR,"\n  fragment rawCourseCardData on Track {\n    id\n    slug\n    title\n    lessonCount: contentItemCount(contentItemType: [Lesson])\n    grantsCertificate\n    enrollmentStatus\n    pro: proExclusive\n    shortDescription\n    difficulty\n    metrics {\n      medianDurationHours\n    }\n  }\n":r.ZuQ,"\n  query curriculumCardDataBySlugs($slugs: [String!]!) {\n    paths(slug: $slugs) {\n      ...rawPathCardData\n    }\n    tracks(slug: $slugs, onlyStandalone: true) {\n      ...rawCourseCardData\n    }\n  }\n":r.hBt,"\n  fragment chatGptPluginSearchArticleResult on ArticleSearchResult {\n    title\n    description\n    slug\n  }\n":r.LR9,"\n  fragment chatGptPluginSearchDocResult on DocSearchResult {\n    title\n    description\n    slug\n  }\n":r.T8M,"\n  fragment chatGptPluginSearchCatalogResult on CatalogSearchResult {\n    id\n    type\n    title\n    shortDescription\n    slug\n    difficulty\n    pro\n    grantsCertificate\n    goal\n    medianDurationHours\n  }\n":r.tqK,"\n  query ChatGptPluginSearchCatalog($query: String!) {\n    siteSearch(query: $query) {\n      catalogContent {\n        ...chatGptPluginSearchCatalogResult\n      }\n    }\n  }\n":r.wKb,"\n  query ChatGptPluginSearchLiterature($query: String!) {\n    siteSearch(query: $query) {\n      articles {\n        ...chatGptPluginSearchArticleResult\n      }\n      docs {\n        ...chatGptPluginSearchDocResult\n      }\n    }\n  }\n":r.NZm,"\n  fragment chatGptPluginTrackSyllabusData on Track {\n    id\n    slug\n    contentModules {\n      title\n      shortDescription\n    }\n  }\n":r.lOg,"\n  fragment chatGptPluginPathSyllabusData on Path {\n    id\n    slug\n    tracks {\n      title\n      shortDescription\n    }\n  }\n":r.Ls2,"\n  query chatGptPluginSyllabusItemsByContainerIdsQuery($ids: [ID!]!) {\n    tracks(id: $ids, onlyStandalone: true) {\n      ...chatGptPluginTrackSyllabusData\n    }\n    paths(id: $ids) {\n      ...chatGptPluginPathSyllabusData\n    }\n  }\n":r.D4o,"\n  fragment dashboardPathData on Path {\n    type: __typename\n    id\n    slug\n    title\n    lessonCount: contentItemCount(contentItemType: Lesson)\n    difficulty\n    goal\n    trackCount\n    shortDescription\n    enrollmentStatus\n    metrics {\n      medianDurationHours\n    }\n  }\n":r.Oct,"\n  fragment dashboardTrackData on Track {\n    type: __typename\n    id\n    slug\n    title\n    lessonCount: contentItemCount(contentItemType: Lesson)\n    difficulty\n    grantsCertificate\n    shortDescription\n    enrollmentStatus\n    pro: proExclusive\n    metrics {\n      medianDurationHours\n    }\n  }\n":r.Nhp,"\n  fragment progressData on ContainerProgressSummary {\n    percentComplete\n  }\n":r.AUr,"\n  fragment enrollmentData on Enrollment {\n    id\n    type\n    updatedAt\n  }\n":r.xoH,"\n  query DashboardUser($userId: ID!) {\n    me {\n      enrolledCourses {\n        ...enrollmentData\n      }\n      enrolledPaths {\n        ...enrollmentData\n      }\n      enrolledJourneys {\n        ...enrollmentData\n      }\n      onboardingQuestionnaire {\n        careerInterest\n        knowledge\n        purpose\n      }\n    }\n    lastSubmit(userId: $userId) {\n      createdAt\n      contentItemId\n      exerciseId\n      id\n      journeyId\n      moduleId\n      pathId\n      trackId\n      updatedAt\n      userId\n    }\n  }\n":r.lF$,"\n  query relatedTopics($slug: String!) {\n    catalogHubPage(slug: $slug) {\n      slug\n      relatedTopics {\n        slug\n        title\n        type\n      }\n    }\n  }\n":r.cdp,"\n  query OnboardingRecommendations {\n    onboardingRecommendations {\n      container {\n        content {\n          ... on Path {\n            ...dashboardPathData\n          }\n          ... on Track {\n            ...dashboardTrackData\n          }\n        }\n      }\n      curated\n    }\n  }\n":r.gsS,"\n  query ContainerRecommendations($slugs: [String!]!) {\n    containerRecommendations(slugs: $slugs) {\n      container {\n        content {\n          ... on Path {\n            ...dashboardPathData\n          }\n          ... on Track {\n            ...dashboardTrackData\n          }\n        }\n      }\n      curated\n    }\n  }\n":r.XiO,"\n  query ReleasedContent {\n    releasedContent {\n      proExclusiveTrackSlugs\n    }\n  }\n":r.J_r,"\n  query TrackProgress($userId: ID!, $slug: String) {\n    track(slug: $slug) {\n      progressV2(userId: $userId) {\n        completed\n      }\n    }\n  }\n":r.x8I,"\n  query EnrollmentSlug($pathIds: [ID!], $trackIds: [ID!]) {\n    paths(id: $pathIds) {\n      ... on Path {\n        slug\n      }\n    }\n    tracks(id: $trackIds) {\n      ... on Track {\n        slug\n      }\n    }\n  }\n":r.kQN,"\n  mutation EditUserOneTimeTriggers($markTrigger: Boolean!, $triggerName: String!) {\n    editOneTimeTriggers(markTrigger: $markTrigger, triggerName: $triggerName) {\n      oneTimeTriggers\n       }\n     }\n  ":r.ZU5,"\n  fragment enrollmentJourneyData on Journey {\n    type: __typename\n    id\n    slug\n    title\n    progressV2(userId: $userId)  {\n      ...progressData\n    }\n  }\n\n  fragment enrollmentPathData on Path {\n    type: __typename\n    id\n    goal\n    slug\n    title\n    progressV2(userId: $userId)  {\n      ...progressData\n    }\n  }\n\n  fragment enrollmentTrackData on Track {\n    type: __typename\n    id\n    slug\n    title\n    progressV2(userId: $userId)  {\n      ...progressData\n    }\n  }\n":r.W8Y,"\n  query EnrollmentContent($journeyIds: [ID!], $pathIds: [ID!], $trackIds: [ID!], $userId: ID!) {\n    journeys(id: $journeyIds) {\n      ... on Journey {\n        ...enrollmentJourneyData\n      }\n    }\n    paths(id: $pathIds) {\n      ... on Path {\n        ...enrollmentPathData\n      }\n    }\n    tracks(id: $trackIds) {\n      ... on Track {\n        ...enrollmentTrackData\n      }\n    }\n  }\n":r.Xy,"query freeResponseQuestionResponse($freeResponseQuestionId: ID!, $articleId: ID!) {\n  freeResponseQuestionResponse(freeResponseQuestionId: $freeResponseQuestionId, articleId: $articleId) {\n    aiFeedback {\n      aiModel\n      score\n      improvements\n      overallEncouragement\n      strengths\n    }\n    createdAt\n    response\n  }\n}":r.Zvs,"\n  mutation updateFreeResponseQuestionResponse(\n    $articleId: ID!,\n    $correctAnswer: String,\n    $freeResponseQuestionId: ID!,\n    $question: String,\n    $response: String!\n  ){\n    upsertFreeResponseQuestionResponse(input: {\n      articleId: $articleId,\n      correctAnswer: $correctAnswer,\n      freeResponseQuestionId: $freeResponseQuestionId,\n      question: $question,\n      response: $response\n    }) {\n      record {\n        aiFeedback {\n          aiModel\n          score\n          improvements\n          overallEncouragement\n          strengths\n        }\n        createdAt\n        response\n      }\n      error {\n        message\n      }\n    }\n  }\n":r.Ujl,"\n  query interactiveSkillBenchmark($id: ID!,  $assessmentProgresses: [AssessmentProgressInput!]) {\n    interactiveSkillBenchmark(id: $id) {\n      id\n      slug\n      title\n      description\n      sourceId\n      published\n      createdAt\n      assessmentCount\n      learningOutcomes {\n        id\n        outcome\n      }\n      generatedAssessmentList(assessmentProgresses: $assessmentProgresses) {\n        learningOutcomeId\n        outcome\n        assessment {\n          ... on ExecutableCode {\n            id\n            type\n            prompt\n            sourceId\n            backend_type: backendType\n            test {\n              test_type: testType\n              test_code: testCode\n              test_options: testOptions\n            }\n            ein_config: einConfig\n            components: layoutComponents {\n              ... on LayoutComponentInterface {\n                id\n                type\n              }\n              ... on WebBrowser {\n                display_url: displayUrl\n              }\n              ... on JupyterBrowser {\n                display_url: displayUrl\n              }\n              ... on Narrative {\n                content\n                instructions\n              }\n              ... on LayoutImage {\n                image_url: imageUrl\n                alt_text: altText\n              }\n              ... on PersistentCodeEditor {\n                files\n                navigator_disabled: navigatorDisabled\n                no_run_button: noRunButton\n              }\n              ... on ReadOnlyCodeEditor {\n                file_path: filePath\n              }\n              ... on ExpoCodeEditor {\n                files\n              }\n              ... on Terminal {\n                shell\n                prevent_checkpoint_run: preventCheckpointRun\n                fake_responses: fakeResponses {\n                  id\n                  delay\n                  match_pattern: matchPattern\n                  output_content: outputContent\n                  output_type: outputType\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n":r.o9r,"\n  query latestSkillBenchmarkSubmit($complete: Boolean!, $id: ID!, $userId: ID!) {\n    latestSkillBenchmarkSubmit(complete: $complete, skillBenchmarkId: $id, userId: $userId) {\n      attemptId\n      complete\n      completedAt\n      createdAt\n      currentAssessmentId\n      id\n      learningOutcomeAssessments {\n        assessmentSubmits {\n          assessmentId\n          complete\n          correct\n          createdAt\n          numAttempts\n          updatedAt\n        }\n        complete\n        createdAt\n        learningOutcomeId\n        score\n        updatedAt\n      }\n      restartedAt\n      score\n      skillBenchmarkId\n      updatedAt\n      userId\n    }\n  }\n":r.M7n,"\n  mutation restartSkillBenchmarkSubmit($input: RestartSkillBenchmarkSubmitInput!) {\n    restartSkillBenchmarkSubmit(input: $input) {\n      record {\n        id\n        skillBenchmarkId\n        userId\n        learningOutcomeAssessments {\n          assessmentSubmits {\n            assessmentId\n            complete\n            correct\n            createdAt\n            numAttempts\n            updatedAt\n          }\n          complete\n          createdAt\n          learningOutcomeId\n          score\n          updatedAt\n        }\n        createdAt\n        updatedAt\n        restartedAt\n      }\n    }\n  }\n":r.YmF,"\n  mutation UpsertSkillBenchmarkSubmit($input: UpsertSkillBenchmarkSubmitInput!) {\n    upsertSkillBenchmarkSubmit(input: $input) {\n      record {\n        attemptId\n        complete\n        completedAt\n        createdAt\n        currentAssessmentId\n        id\n        learningOutcomeAssessments {\n          assessmentSubmits {\n            assessmentId\n            complete\n            correct\n            createdAt\n            numAttempts\n            updatedAt\n          }\n          complete\n          createdAt\n          learningOutcomeId\n          score\n          updatedAt\n        }\n        restartedAt\n        score\n        skillBenchmarkId\n        updatedAt\n        userId\n      }\n    }\n  }\n":r.JoD,"\n  query queryAssessmentById($id: ID, $draft: Boolean) {\n    assessment(id: $id, draft: $draft) {\n      ...on AssessmentInterface {\n        id\n        type\n        prompt\n        sourceId\n      }\n\n      ...on ExecutableCode {\n        backend_type: backendType\n        test {\n          test_type: testType\n          test_code: testCode\n          test_options: testOptions\n        }\n        ein_config: einConfig\n        components: layoutComponents {\n          ...on LayoutComponentInterface {\n            id\n            type\n          }\n\n          ... on WebBrowser {\n            display_url: displayUrl\n          }\n\n          ... on JupyterBrowser {\n            display_url: displayUrl\n          }\n\n          ...on Narrative {\n            content\n            instructions\n          }\n\n          ...on LayoutImage {\n            image_url: imageUrl\n            alt_text: altText\n          }\n\n          ...on PersistentCodeEditor {\n            files\n            navigator_disabled: navigatorDisabled\n            no_run_button:noRunButton\n          }\n\n          ...on ReadOnlyCodeEditor {\n            file_path: filePath\n          }\n\n          ...on ExpoCodeEditor {\n            files\n          }\n\n          ...on Terminal {\n            shell\n            prevent_checkpoint_run: preventCheckpointRun\n            fake_responses: fakeResponses {\n              id\n              delay\n              match_pattern: matchPattern\n              output_content: outputContent\n              output_type: outputType\n            }\n          }\n        }\n      }\n\n      ...on FillInCode {\n        snippet_template: snippetTemplate\n        code_language: codeLanguage\n        decoy_answers: decoyAnswers\n        answers {\n          id\n          hint\n          text\n        }\n      }\n\n      ... on MultipleChoice {\n        correct_answer: correctAnswer\n        answers {\n          text\n          reason\n        }\n        image {\n          url\n          alt\n        }\n        latex_block: latexBlock {\n          text\n        }\n        code_snippet: codeSnippet {\n          language\n          text\n        }\n      }\n    }\n  }\n":r.xQ5,"\n  fragment CONTENT_ITEM_BASE_FIELDS on ContentItemInterface {\n    id\n    description\n    is_deprecated: isDeprecated\n    is_free: isFree\n    published\n    slug\n    title\n    time\n    type\n    requiredAgreements {\n      aiDisclaimer\n    }\n  }\n":r.miO,"\n  fragment LESSON_EXERCISE_FIELDS on Exercise {\n      id\n      sourceId\n      title\n      slug\n      published\n      setup_command: setupCommand\n      created_at: createdAt\n      checkpoints {\n        id\n        instructions\n        hint\n        test_type: testType\n        test_code: testCode\n        test_options: testOptions\n      }\n      ein_config: einConfig\n      last_modified_at: updatedAt\n      workspace {\n        id\n        slug\n        type: backendType\n      }\n      components: layoutComponents {\n        ... on LayoutComponentInterface {\n          id\n          type\n        }\n\n        ... on WebBrowser {\n          display_url: displayUrl\n        }\n\n        ... on JupyterBrowser {\n          display_url: displayUrl\n        }\n\n        ...on Narrative {\n          content\n          instructions\n        }\n\n        ...on LayoutImage {\n          image_url: imageUrl\n          alt_text: altText\n        }\n\n        ...on PersistentCodeEditor {\n          files\n          navigator_disabled: navigatorDisabled\n          no_run_button:noRunButton\n        }\n\n        ...on ReadOnlyCodeEditor {\n          file_path: filePath\n        }\n\n        ...on ExpoCodeEditor {\n          files\n          navigator_disabled: navigatorDisabled\n          no_run_button: noRunButton\n        }\n\n        ...on Terminal {\n          shell\n          prevent_checkpoint_run: preventCheckpointRun\n          fake_responses: fakeResponses {\n            id\n            delay\n            match_pattern: matchPattern\n            output_content: outputContent\n            output_type: outputType\n          }\n        }\n\n        ...on Video {\n          video_urls: videoUrls\n          autoplay\n          mute\n          loop\n          show_controls: showControls\n        }\n      }\n  }\n":r.m0T,"\n  fragment PROGRESS_SUMMARY_BASE_FRAGMENT on ContentItemProgressSummaryInterface {\n    content_item_id: contentItemId\n    started: started\n    started_at: startedAt\n    completed: completed\n    completed_at: completedAt\n    user_completed: userCompleted\n    user_completed_at: userCompletedAt\n    user_id: userId\n    last_updated: lastUpdated\n    record {\n      state {\n        attempts {\n          at\n          correct\n          total\n        }\n        bookmark\n        checklist\n        kanban {\n          to_do: toDo {\n            task_id: taskId\n          }\n          done {\n            task_id: taskId\n          }\n          in_progress: inProgress {\n            task_id: taskId\n          }\n        }\n      }\n    }\n  }":r.HTL,"\n  fragment LESSON_PROGRESS_SUMMARY_FIELDS on LessonProgressSummary {\n    type\n    progress_pct: percentComplete\n    exercises_completed: exercisesCompleted\n    exercises_total: exercisesTotal\n    current_exercise_checkpoints_completed: currentExerciseCheckpointsCompleted\n  }\n":r.jLb,"\n  fragment EXTERNAL_RESOURCE_FIELDS on ExternalResource {\n    body\n    resource_type: resourceType\n    source_name: sourceName\n    resource_url: resourceUrl\n    image {\n      alt\n      url\n    }\n  }\n":r.PHb,"\n  fragment KANBAN_PROJECT_PROGRESS_SUMMARY_FIELDS on KanbanProjectProgressSummary {\n    type\n    state {\n      to_do: toDo {\n        task_id: taskId\n      }\n      done {\n        task_id: taskId\n      }\n      in_progress: inProgress {\n        task_id: taskId\n      }\n    }\n  }\n":r.CFc,"\n  fragment KANBAN_PROJECT_FIELDS on KanbanProject {\n    kanban_project_information: kanbanProjectInformation {\n      long_overview: longOverview\n      resources\n      setup_instructions: setupInstructions\n      short_overview: shortOverview\n      kanban_tasks: tasks {\n        description\n        hint\n        id\n        title\n      }\n    }\n  }\n":r.JMj,"\n  fragment PROJECT_BASE_FIELDS on Project {\n    standalone\n    projectInformation {\n      ein_config: einConfig\n      download_path: downloadPath\n      objective\n      preview_url: previewUrl\n      thumbnail_url: thumbnailUrl\n      video_url: videoUrl\n      workspace {\n        id\n        slug\n        type: backendType\n      }\n      self_assessments: taskGroups {\n        heading\n        tasks {\n          hint\n          task_key: taskKey\n          text\n        }\n      }\n      components: layoutComponents {\n        ... on LayoutComponentInterface {\n          id\n          type\n        }\n        ... on WebBrowser {\n          display_url: displayUrl\n        }\n        ... on JupyterBrowser {\n          display_url: displayUrl\n        }\n        ... on Narrative {\n          content\n          instructions\n        }\n        ... on LayoutImage {\n          image_url: imageUrl\n          alt_text: altText\n        }\n        ... on PersistentCodeEditor {\n          files\n          navigator_disabled: navigatorDisabled\n          no_run_button:noRunButton\n        }\n        ... on ReadOnlyCodeEditor {\n          file_path: filePath\n        }\n        ... on ExpoCodeEditor {\n          files\n        }\n        ... on Terminal {\n          shell\n          prevent_checkpoint_run: preventCheckpointRun\n          fake_responses: fakeResponses {\n            id\n            delay\n            match_pattern: matchPattern\n            output_content: outputContent\n            output_type: outputType\n          }\n        }\n        ... on Video {\n          video_urls: videoUrls\n          autoplay\n          mute\n          loop\n          show_controls: showControls\n        }\n      }\n    }\n  }\n":r.Jhm,"\n  fragment PROJECT_PROGRESS_SUMMARY_FIELDS on ProjectProgressSummary {\n    ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    progress_pct: progressPct\n    tasks_complete: tasksComplete\n    tasks_total: tasksTotal\n    status\n    type\n    checklist\n  }\n":r.ye2,"\n fragment QUIZ_FIELDS on Quiz {\n  assessment_ids: assessmentIds(includeUnpublished: $includeUnpublished)\n  assessments(includeUnpublished: $includeUnpublished) {\n    ... on AssessmentInterface {\n      id\n      type\n      prompt\n    }\n\n    ... on ExecutableCode {\n      components: layoutComponents {\n        ... on LayoutComponentInterface {\n          id\n          type\n        }\n        ... on ExpoCodeEditor {\n          files\n        }\n        ... on PersistentCodeEditor {\n          files\n        }\n        ... on WebBrowser {\n          display_url: displayUrl\n        }\n      }\n      test {\n        id\n          test_type: testType\n          test_code: testCode\n          test_options: testOptions\n      }\n      ein_config: einConfig\n    }\n\n    ... on FillInCode {\n      snippet_template: snippetTemplate\n      code_language: codeLanguage\n      decoy_answers: decoyAnswers\n      answers {\n        id\n        hint\n        text\n      }\n    }\n\n    ... on MultipleChoice {\n      correct_answer: correctAnswer\n      answers {\n        text\n        reason\n      }\n      image {\n        url\n        alt\n      }\n      latex_block: latexBlock {\n        text\n      }\n      code_snippet: codeSnippet {\n        language\n        text\n      }\n    }\n  }\n }":r.Ma2,"\n  fragment QUIZ_PROGRESS_SUMMARY_FIELDS on QuizProgressSummary {\n    total\n    correct\n    pct\n    highest_pct: highestPercent\n    passed\n    passed_any: passedAny\n    taken\n    type\n    quiz_attempts: quizAttempts {\n      at\n      correct\n      passed\n      percent\n      total\n    }\n  }\n":r.Un0,"\n  query draftLessonWithExercises($id: ID, $slug: String, $userId: ID!, $includeUnpublished: Boolean) {\n    lesson(id: $id, slug: $slug) {\n        ...CONTENT_ITEM_BASE_FIELDS\n        published_exercise_ids: publishedExerciseIds\n        exercise_ids: exerciseIds(includeUnpublished: $includeUnpublished)\n        exercises {\n          ...LESSON_EXERCISE_FIELDS\n          draft {\n            ...LESSON_EXERCISE_FIELDS\n          }\n        }\n        source_id: sourceId\n        draft {\n          ...CONTENT_ITEM_BASE_FIELDS\n          source_id: sourceId\n          published_exercise_ids: publishedExerciseIds\n          exercise_ids: exerciseIds(includeUnpublished: $includeUnpublished)\n          exercises {\n            ...LESSON_EXERCISE_FIELDS\n            draft {\n            ...LESSON_EXERCISE_FIELDS\n            }\n          }\n        }\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...LESSON_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n    }\n  ":r.ubI,"\n  query draftContentItem($id: ID, $slug: String, $userId: ID!, $includeUnpublished: Boolean){\n    contentItem(id: $id, slug: $slug) {\n       ... on ContentItemInterface {\n        ...CONTENT_ITEM_BASE_FIELDS\n        draft {\n          id\n          source_id: sourceId\n        }\n      }\n\n      ... on Article {\n        body\n\n        draft {\n          ...CONTENT_ITEM_BASE_FIELDS\n          source_id: sourceId\n          body\n        }\n\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        }\n      }\n\n      ... on ExternalResource {\n        ...EXTERNAL_RESOURCE_FIELDS\n\n        draft {\n          ...CONTENT_ITEM_BASE_FIELDS\n          ...EXTERNAL_RESOURCE_FIELDS\n          source_id: sourceId\n        }\n\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        }\n      }\n\n      ... on Informational {\n        body\n\n        draft {\n          ...CONTENT_ITEM_BASE_FIELDS\n          source_id: sourceId\n          body\n        }\n\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        }\n      }\n\n      ... on KanbanProject {\n        ...KANBAN_PROJECT_FIELDS\n\n        draft {\n          ...KANBAN_PROJECT_FIELDS\n          ...CONTENT_ITEM_BASE_FIELDS\n          source_id: sourceId\n        }\n\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...KANBAN_PROJECT_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n\n      ... on Lesson {\n        published_exercise_ids: publishedExerciseIds\n        exercise_ids: exerciseIds(includeUnpublished: $includeUnpublished)\n\n        exercises {\n          id\n          slug\n          source_id: sourceId\n        }\n\n        draft {\n          published_exercise_ids: publishedExerciseIds\n          exercise_ids: exerciseIds(includeUnpublished: $includeUnpublished)\n          exercises {\n            id\n            slug\n            source_id: sourceId\n          }\n        }\n\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...LESSON_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n\n      ... on Project {\n        ...PROJECT_BASE_FIELDS\n\n        draft {\n          ...CONTENT_ITEM_BASE_FIELDS\n          ...PROJECT_BASE_FIELDS\n          source_id: sourceId\n        }\n\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...PROJECT_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n\n      ... on Quiz {\n        ...QUIZ_FIELDS\n\n        draft {\n          ...CONTENT_ITEM_BASE_FIELDS\n          ...QUIZ_FIELDS\n          source_id: sourceId\n        }\n\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...QUIZ_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n\n      ... on VideoContentItem {\n        video_url: videoUrl\n        body\n\n        draft {\n          ...CONTENT_ITEM_BASE_FIELDS\n          source_id: sourceId\n          video_url: videoUrl\n          body\n        }\n\n        progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        }\n      }\n    }\n  }\n":r.ezs,"\n  query standaloneProjectBySlug($slug: String!, $userId: ID!, $skipProgress: Boolean!) {\n    project(slug: $slug) {\n      ...CONTENT_ITEM_BASE_FIELDS\n      ...PROJECT_BASE_FIELDS\n      progress(userId: $userId) @skip(if: $skipProgress) {\n        ...PROJECT_PROGRESS_SUMMARY_FIELDS\n      }\n    }\n  }\n":r.yPx,"\n  query standaloneKanbanProjectBySlug($slug: String!, $userId: ID!, $skipProgress: Boolean!) {\n    kanbanProject(slug: $slug) {\n      ...CONTENT_ITEM_BASE_FIELDS\n      ...KANBAN_PROJECT_FIELDS\n      progress(userId: $userId) @skip(if: $skipProgress) {\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        ...KANBAN_PROJECT_PROGRESS_SUMMARY_FIELDS\n      }\n    }\n  }\n":r.bMJ,"\n  query challengeLesson($slug: String!, $userId: ID!, $skipProgress: Boolean!){\n    lesson(slug: $slug){\n      ... on ContentItemInterface {\n        ...CONTENT_ITEM_BASE_FIELDS\n      }\n\n      ... on Lesson {\n        exercises {\n          ...LESSON_EXERCISE_FIELDS\n        }\n\n        progress(userId: $userId) @skip(if: $skipProgress) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...LESSON_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n    }\n  }\n":r.i2u,"\n  fragment EMODULE_DATA on EnterpriseModule {\n    id\n    title\n    slug\n    contentItemIds\n    shortDescription\n    skills\n  }":r.S2L,"\n  fragment EMODULE_CONTENT_ITEMS on EnterpriseModule {\n  contentItems {\n    ...CONTENT_ITEM_BASE_FIELDS\n\n    ... on Article {\n      body\n\n      progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n      }\n    }\n\n    ... on ExternalResource {\n      ...EXTERNAL_RESOURCE_FIELDS\n\n      progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n       }\n    }\n\n    ... on Informational {\n      body\n\n      progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n      }\n    }\n\n    ... on KanbanProject {\n      ...KANBAN_PROJECT_FIELDS\n\n      progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...KANBAN_PROJECT_PROGRESS_SUMMARY_FIELDS\n      }\n    }\n\n    ... on Lesson {\n      exercise_ids: exerciseIds(includeUnpublished: $includeUnpublished)\n      published_exercise_ids: publishedExerciseIds\n      exercises {\n        ...LESSON_EXERCISE_FIELDS\n      }\n\n      progress(userId: $userId) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...LESSON_PROGRESS_SUMMARY_FIELDS\n      }\n    }\n    ... on Project {\n      ...PROJECT_BASE_FIELDS\n\n      progress(userId: $userId) {\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        ...PROJECT_PROGRESS_SUMMARY_FIELDS\n      }\n    }\n\n    ... on Quiz {\n      ...QUIZ_FIELDS\n\n      progress(userId: $userId) {\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        ...QUIZ_PROGRESS_SUMMARY_FIELDS\n      }\n    }\n\n    ... on VideoContentItem {\n      video_url: videoUrl\n      body\n      progress(userId: $userId) {\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n      }\n    }\n  }\n}\n":r.rwg,"\n  query enterpriseModuleById($id: ID!, $includeUnpublished: Boolean, $userId: ID!) {\n    enterpriseModule(id: $id){\n      ...EMODULE_DATA\n      ...EMODULE_CONTENT_ITEMS\n      reviewCardCount\n    }\n}":r.ec_,"\n  query enterpriseModuleResumeQuery($slug: String!, $userId: ID!){\n    enterpriseModule(slug: $slug){\n      id\n      slug\n      resumeLocation(userId: $userId){\n        enterpriseModuleSlug\n        contentItemType\n        contentItemSlug\n        exerciseSlug\n      }\n    }\n  }\n":r.QeL,"\n  query enterpriseModuleBySlug($slug: String!, $includeUnpublished: Boolean, $userId: ID!) {\n    enterpriseModule(slug: $slug){\n      ...EMODULE_DATA\n      ...EMODULE_CONTENT_ITEMS\n      reviewCardCount\n      reviewCards {\n        id\n        sourceId\n        title\n        slug\n        body\n        published\n        createdAt\n        codeSnippets {\n            id\n            language\n            text\n        }\n        images {\n            url\n            alt\n        }\n      }\n    }\n  }\n":r.ILM,"\n  query freeResponseQuestionById($id: ID, $draft: Boolean) {\n    freeResponseQuestion(id: $id, draft: $draft) {\n      createdAt\n      hint\n      id\n      prompt\n      published\n      sampleResponse\n      sourceId\n    }\n  }\n":r.zNt,"\n  fragment JOURNEY_ARTICLE on Article {\n    body\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    }\n  }\n":r.iiz,"\n  fragment JOURNEY_EXTERNAL_RESOURCE on ExternalResource {\n    ...EXTERNAL_RESOURCE_FIELDS\n\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    }\n  }\n":r.GBW,"\n  fragment JOURNEY_INFORMATIONAL on Informational {\n    body\n\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    }\n  }\n":r.gmP,"\n  fragment JOURNEY_KANBAN_PROJECT on KanbanProject {\n  ...KANBAN_PROJECT_FIELDS\n\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        ...KANBAN_PROJECT_PROGRESS_SUMMARY_FIELDS\n    }\n  }\n":r.xh1,"\n  fragment JOURNEY_LESSON on Lesson {\n    exercise_ids: exerciseIds(includeUnpublished: $includeUnpublished)\n    published_exercise_ids: publishedExerciseIds\n    exercises {\n      ...LESSON_EXERCISE_FIELDS\n    }\n\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        ...LESSON_PROGRESS_SUMMARY_FIELDS\n    }\n  }\n ":r.fnG,"\n  fragment JOURNEY_PROJECT on Project {\n    ...PROJECT_BASE_FIELDS\n\n    progress(userId: $userId) @include(if: $includeProgress){\n      ...PROGRESS_SUMMARY_BASE_FRAGMENT\n      ...PROJECT_PROGRESS_SUMMARY_FIELDS\n    }\n  }\n":r.NUV,"\n  fragment JOURNEY_QUIZ on Quiz {\n    ...QUIZ_FIELDS\n\n    progress(userId: $userId) @include(if: $includeProgress){\n      ...PROGRESS_SUMMARY_BASE_FRAGMENT\n      ...QUIZ_PROGRESS_SUMMARY_FIELDS\n    }\n  }\n":r.cuU,"\n  fragment JOURNEY_VIDEO on VideoContentItem {\n    video_url: videoUrl\n    body\n    progress(userId: $userId) @include(if: $includeProgress){\n      ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    }\n  }\n":r.Cyk,"\n  fragment JOURNEY_CONTENT_ITEMS on ContentModule {\n    contentItems {\n      ...CONTENT_ITEM_BASE_FIELDS\n      ...JOURNEY_ARTICLE\n      ...JOURNEY_EXTERNAL_RESOURCE\n      ...JOURNEY_INFORMATIONAL\n      ...JOURNEY_KANBAN_PROJECT\n      ...JOURNEY_LESSON\n      ...JOURNEY_PROJECT\n      ...JOURNEY_QUIZ\n      ...JOURNEY_VIDEO\n  }\n}\n":r.QQv,"\n  fragment JOURNEY_MODULES on Journey {\n    modules: contentModules {\n            id\n            slug\n            created_at: createdAt\n            last_modified_at: updatedAt\n            published\n            short_description: shortDescription\n            long_description: longDescription\n            content_item_ids: contentItemIds\n            review_card_ids: reviewCardIds\n            contentItemIds\n            title\n            ...JOURNEY_CONTENT_ITEMS\n          }\n  }\n":r.Zwh,"\n  fragment JOURNEY_TRACKS on Journey {\n    tracks {\n      id\n      title\n      slug\n      container_type: __typename\n      contentModuleIds\n      contentItemIds\n    }\n  }\n":r.FVr,"\n  fragment JOURNEY_PATHS on Journey {\n    paths {\n      ...PATH_BASE_FIELDS\n    }\n  }\n":r.elB,"\n  query queryJourneyAndPathBySlug($pathSlug: String, $journeySlug: String) {\n    path(slug: $pathSlug) {\n      id\n      title\n      slug\n      container_type: __typename\n      categories {\n        slug\n        title\n        type: classification\n      }\n      completion_time: completionTime\n      goal\n      published\n      released\n      track_ids: trackIds\n      created_at: createdAt\n      updated_at: updatedAt\n      last_modified_at: updatedAt\n      description\n      short_description: shortDescription\n      alert_description: alertDescription\n      alert_type: alertType\n      alert_cta: alertCta\n      alert_cta_destination: alertCtaDestination\n      completion_message: completionMessage\n      theme_color: themeColor\n      video_url: videoUrl\n      difficulty\n      category_ids: categoryIds\n      lesson_count: contentItemCount(contentItemType: Lesson)\n      project_count: contentItemCount(contentItemType: Project)\n      article_count: contentItemCount(contentItemType: Article)\n      quiz_count: contentItemCount(contentItemType: Quiz)\n      organization_id: organizationId\n    }\n    journey(slug: $journeySlug) {\n      id\n      slug\n      title\n      categories {\n        slug\n        title\n        type: classification\n      }\n      pathIds\n    }\n  }\n":r.Ja2,"\n  query journeyResumeQuery($id: ID, $slug: String, $userId: ID!, $isAnon: Boolean!) {\n    journey(id: $id, slug: $slug) {\n      id\n      slug\n      resumeLocation(userId: $userId) @skip(if: $isAnon){\n        journeySlug\n        pathSlug\n        trackSlug\n        contentModuleSlug\n        contentItemType\n        contentItemSlug\n        exerciseSlug\n      }\n    }\n  }\n":r.gZX,"\n  query initialJourneyPageData(\n    $id: ID,\n    $slug: String,\n    $draft: Boolean,\n    $includeUnpublished: Boolean = false\n    $userId: ID!\n    $includeProgress: Boolean = false\n    $trackSlug: String,\n    $contentItemSlug: String\n  ) {\n    journey(id: $id, slug: $slug, draft: $draft) {\n      id\n      slug\n      title\n      pathIds\n      trackIds\n      moduleIds: contentModuleIds\n      contentItemIds\n    }\n\n    track(slug: $trackSlug) {\n      id\n      title\n      slug\n      container_type: __typename\n      contentModuleIds\n      contentItemIds\n    }\n\n    contentItem(slug: $contentItemSlug){\n      ...CONTENT_ITEM_BASE_FIELDS\n      ...JOURNEY_ARTICLE\n      ...JOURNEY_EXTERNAL_RESOURCE\n      ...JOURNEY_INFORMATIONAL\n      ...JOURNEY_KANBAN_PROJECT\n      ...JOURNEY_LESSON\n      ...JOURNEY_PROJECT\n      ...JOURNEY_QUIZ\n      ...JOURNEY_VIDEO\n    }\n  }\n":r._Td,"\n  query journeyByIdOrSlug(\n    $id: ID,\n    $slug: String,\n    $draft: Boolean = false,\n    $includeUnpublished: Boolean = false\n    $userId: ID!\n    $includeProgress: Boolean = false\n  ) {\n    journey(id: $id, slug: $slug, draft: $draft) {\n      id\n      slug\n      title\n      pathIds\n      trackIds\n      categories {\n        slug\n        title\n        type: classification\n    }\n      ...JOURNEY_PATHS\n      ...JOURNEY_TRACKS\n      ...JOURNEY_MODULES\n    }\n  }\n":r.Q_m,"\n  fragment PATH_ARTICLE on Article {\n    body\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    }\n  }\n":r.UCU,"\n  fragment PATH_EXTERNAL_RESOURCE on ExternalResource {\n    ...EXTERNAL_RESOURCE_FIELDS\n\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    }\n  }\n":r.rXw,"\n  fragment PATH_INFORMATIONAL on Informational {\n    body\n\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    }\n  }\n":r.d5s,"\n  fragment PATH_KANBAN_PROJECT on KanbanProject {\n  ...KANBAN_PROJECT_FIELDS\n\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        ...KANBAN_PROJECT_PROGRESS_SUMMARY_FIELDS\n    }\n  }\n":r.$e3,"\n  fragment PATH_LESSON on Lesson {\n    exercise_ids: exerciseIds(includeUnpublished: $includeUnpublished)\n    published_exercise_ids: publishedExerciseIds\n    exercises {\n      ...LESSON_EXERCISE_FIELDS\n    }\n\n    progress(userId: $userId) @include(if: $includeProgress){\n        ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        ...LESSON_PROGRESS_SUMMARY_FIELDS\n    }\n  }\n ":r.nVF,"\n  fragment PATH_PROJECT on Project {\n    ...PROJECT_BASE_FIELDS\n\n    progress(userId: $userId) @include(if: $includeProgress){\n      ...PROGRESS_SUMMARY_BASE_FRAGMENT\n      ...PROJECT_PROGRESS_SUMMARY_FIELDS\n    }\n  }\n":r.qEY,"\n  fragment PATH_QUIZ on Quiz {\n    ...QUIZ_FIELDS\n\n    progress(userId: $userId) @include(if: $includeProgress){\n      ...PROGRESS_SUMMARY_BASE_FRAGMENT\n      ...QUIZ_PROGRESS_SUMMARY_FIELDS\n    }\n  }\n":r.Dfq,"\n  fragment PATH_VIDEO on VideoContentItem {\n    video_url: videoUrl\n    body\n    progress(userId: $userId) @include(if: $includeProgress){\n      ...PROGRESS_SUMMARY_BASE_FRAGMENT\n    }\n  }\n":r.djn,"\n  fragment PATH_CONTENT_ITEMS on ContentModule {\n    contentItems {\n      ...CONTENT_ITEM_BASE_FIELDS\n      ...PATH_ARTICLE\n      ...PATH_EXTERNAL_RESOURCE\n      ...PATH_INFORMATIONAL\n      ...PATH_KANBAN_PROJECT\n      ...PATH_LESSON\n      ...PATH_PROJECT\n      ...PATH_QUIZ\n      ...PATH_VIDEO\n\n    }\n  }\n":r.NqE,"fragment PATH_MODULES on Path {\n  modules: contentModules {\n          id\n          slug\n          created_at: createdAt\n          last_modified_at: updatedAt\n          published\n          short_description: shortDescription\n          long_description: longDescription\n          content_item_ids: contentItemIds\n          review_card_ids: reviewCardIds\n          contentItemIds\n          title\n          ...PATH_CONTENT_ITEMS\n        }\n}":r.M7S,"\n  fragment PATH_TRACKS on Path {\n    tracks {\n      id\n      title\n      slug\n      container_type: __typename\n      contentModuleIds\n      contentItemIds\n    }\n  }\n":r.Brl,"\n  fragment PATH_BASE_FIELDS on Path {\n    id\n    title\n    slug\n    categories {\n      slug\n      title\n      type: classification\n    }\n    completion_time: completionTime\n    goal\n    published\n    released\n    journeys {\n      id\n      slug\n    }\n    track_ids: trackIds\n    created_at: createdAt\n    updated_at: updatedAt\n    last_modified_at: updatedAt\n    description\n    short_description: shortDescription\n    alert_description: alertDescription\n    alert_type: alertType\n    alert_cta: alertCta\n    alert_cta_destination: alertCtaDestination\n    completion_message: completionMessage\n    theme_color: themeColor\n    video_url: videoUrl\n    difficulty\n    category_ids: categoryIds\n    lesson_count: contentItemCount(contentItemType: Lesson)\n    project_count: contentItemCount(contentItemType: Project)\n    article_count: contentItemCount(contentItemType: Article)\n    quiz_count: contentItemCount(contentItemType: Quiz)\n    organization_id: organizationId\n    sourceId\n  }":r.OPL,"\n  query initialPathPageData(\n      $id: ID\n      $slug: String\n      $draft: Boolean\n      $includeUnpublished: Boolean = false\n      $userId: ID!\n      $includeProgress: Boolean = false,\n      $trackSlug: String,\n      $contentItemSlug: String\n    ) {\n      path(id: $id, slug: $slug, draft: $draft) {\n        ...PATH_BASE_FIELDS\n      }\n\n      track(slug: $trackSlug){\n        id\n        title\n        slug\n        container_type: __typename\n        contentModuleIds\n        contentItemIds\n      }\n\n      contentItem(slug: $contentItemSlug){\n        ...CONTENT_ITEM_BASE_FIELDS\n        ...PATH_ARTICLE\n        ...PATH_EXTERNAL_RESOURCE\n        ...PATH_INFORMATIONAL\n        ...PATH_KANBAN_PROJECT\n        ...PATH_LESSON\n        ...PATH_PROJECT\n        ...PATH_QUIZ\n        ...PATH_VIDEO\n      }\n  }\n":r.AXv,"\n  query pathResumeQuery(\n      $id: ID\n      $slug: String\n      $userId: ID!\n      $isAnon: Boolean!){\n        path(id: $id, slug: $slug){\n          id\n          slug\n          released\n          journeys {\n            id\n            slug\n          }\n          resumeLocation(userId: $userId) @skip(if: $isAnon){\n            pathSlug\n            trackSlug\n            contentModuleSlug\n            contentItemType\n            contentItemSlug\n            exerciseSlug\n          }\n        }\n  }\n":r.VrK,"\n  query pathByIdOrSlug(\n    $id: ID\n    $slug: String\n    $draft: Boolean\n    $includeUnpublished: Boolean = false\n    $userId: ID!\n    $includeProgress: Boolean = false\n  ) {\n    path(id: $id, slug: $slug, draft: $draft) {\n      ...PATH_BASE_FIELDS\n      ...PATH_TRACKS\n      ...PATH_MODULES\n    }\n  }\n":r.XA9,"\n  query queryPathAndTrackBySlug($pathSlug: String, $trackSlug: String) {\n    path(slug: $pathSlug) {\n      id\n      title\n      slug\n      container_type: __typename\n      categories {\n        slug\n        title\n        type: classification\n      }\n      completion_time: completionTime\n      goal\n      published\n      released\n      track_ids: trackIds\n      created_at: createdAt\n      updated_at: updatedAt\n      last_modified_at: updatedAt\n      description\n      short_description: shortDescription\n      alert_description: alertDescription\n      alert_type: alertType\n      alert_cta: alertCta\n      alert_cta_destination: alertCtaDestination\n      completion_message: completionMessage\n      theme_color: themeColor\n      video_url: videoUrl\n      difficulty\n      category_ids: categoryIds\n      lesson_count: contentItemCount(contentItemType: Lesson)\n      project_count: contentItemCount(contentItemType: Project)\n      article_count: contentItemCount(contentItemType: Article)\n      quiz_count: contentItemCount(contentItemType: Quiz)\n      organization_id: organizationId\n    }\n\n    track(slug: $trackSlug) {\n      id\n      title\n      slug\n      container_type: __typename\n      categories {\n        slug\n        title\n        type: classification\n      }\n      created_at: createdAt\n      last_modified_at: updatedAt\n      published\n      completion_message: completionMessage\n      short_description: shortDescription\n      long_description: longDescription\n      alert_description: alertDescription\n      alert_type: alertType\n      alert_cta: alertCta\n      alert_cta_destination: alertCtaDestination\n      partner_logo: partnerLogo\n      partner_url: partnerUrl\n      partner_tagline: partnerTagline\n      lesson_count: contentItemCount(contentItemType: Lesson)\n      category_ids: categoryIds\n      difficulty\n      module_ids: contentModuleIds\n    }\n  }\n":r.HIq,"\n  query reviewCardById($id: ID, $draft: Boolean) {\n    reviewCard(id: $id, draft: $draft) {\n      id\n      sourceId\n      title\n      slug\n      body\n      published\n      created_at: createdAt\n      last_modified_at: updatedAt\n      code_snippets: codeSnippets {\n        text\n        language\n      }\n      images {\n        url\n        alt\n      }\n    }\n  }\n":r.Ii0,"\n  fragment TRACK_MODULES on Track{\n    modules: contentModules @include(if: $relations) {\n          id\n          title\n          slug\n          created_at: createdAt\n          last_modified_at: updatedAt\n          published\n          short_description: shortDescription\n          long_description: longDescription\n          content_item_ids: contentItemIds\n        }\n  }\n":r.OsM,"\n  fragment TRACK_CONTENT_ITEMS on Track {\n    contentItems @include(if: $relations) {\n      ...CONTENT_ITEM_BASE_FIELDS\n\n      ... on Article {\n        body\n        progress(userId: $userId) @skip(if: $skipProgress) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        }\n      }\n\n\n      ... on ExternalResource {\n        ...EXTERNAL_RESOURCE_FIELDS\n\n        progress(userId: $userId) @skip(if: $skipProgress) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        }\n      }\n\n      ... on Informational {\n        body\n        progress(userId: $userId) @skip(if: $skipProgress) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        }\n      }\n\n      ... on KanbanProject {\n        ...KANBAN_PROJECT_FIELDS\n\n        progress(userId: $userId) @skip(if: $skipProgress) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...KANBAN_PROJECT_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n\n\n      ... on Lesson {\n        exercise_ids: exerciseIds\n        published_exercise_ids: publishedExerciseIds\n\n        exercises {\n          ...LESSON_EXERCISE_FIELDS\n        }\n\n        progress(userId: $userId) @skip(if: $skipProgress) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...LESSON_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n\n      ... on Project {\n        ...PROJECT_BASE_FIELDS\n\n        progress(userId: $userId) @skip(if: $skipProgress) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...PROJECT_PROGRESS_SUMMARY_FIELDS\n          }\n      }\n\n      ... on Quiz {\n      ...QUIZ_FIELDS\n        progress(userId: $userId) @skip(if: $skipProgress) {\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n          ...QUIZ_PROGRESS_SUMMARY_FIELDS\n        }\n      }\n\n      ... on VideoContentItem {\n        video_url: videoUrl\n        body\n        progress(userId: $userId) @skip(if: $skipProgress){\n          ...PROGRESS_SUMMARY_BASE_FRAGMENT\n        }\n      }\n    }\n}\n":r.Xk6,"\n  fragment TRACK_DATA on Track {\n    id\n    title\n    slug\n    container_type: __typename\n    categories {\n      slug\n      title\n      type: classification\n    }\n    created_at: createdAt\n    last_modified_at: updatedAt\n    published\n    completion_message: completionMessage\n    short_description: shortDescription\n    long_description: longDescription\n    alert_description: alertDescription\n    alert_type: alertType\n    alert_cta: alertCta\n    alert_cta_destination: alertCtaDestination\n    partner_logo: partnerLogo\n    partner_url: partnerUrl\n    partner_tagline: partnerTagline\n    lesson_count: contentItemCount(contentItemType: Lesson)\n    category_ids: categoryIds\n    difficulty\n    module_ids: contentModuleIds\n    organization_id: organizationId\n    }\n":r.Wyk,"\n  query trackData($slug: String!, $relations: Boolean!, $userId: ID!, $skipProgress: Boolean!, $includeUnpublished: Boolean = false) {\n    track(slug: $slug) {\n      ...TRACK_DATA\n      ...TRACK_MODULES\n      ...TRACK_CONTENT_ITEMS\n    }\n  }\n":r.orE,'\n  query practice(\n    $trackSlug: String\n    $moduleSlug: String = ""\n    $contentItemSlug: String = ""\n  ) {\n    contentItem(slug: $contentItemSlug) {\n      ... on ContentItemInterface {\n        id\n        slug\n        type\n      }\n    }\n\n    contentModule(slug: $moduleSlug) {\n      id\n      slug\n      type: __typename\n    }\n\n    track(slug: $trackSlug) {\n      id\n      slug\n      type: __typename\n    }\n  }\n':r.M6r,'\n  query pathPractice(\n      $contentItemSlug: String = ""\n      $moduleSlug: String = ""\n      $pathSlug: String\n      $trackSlug: String = ""\n    ) {\n      contentItem(slug: $contentItemSlug) {\n        ... on ContentItemInterface {\n          id\n          slug\n          type\n        }\n      }\n\n      contentModule(slug: $moduleSlug) {\n        id\n        slug\n        type: __typename\n      }\n\n      path (slug: $pathSlug) {\n        id\n        slug\n        type: __typename\n      }\n\n      track(slug: $trackSlug) {\n        id\n        slug\n        type: __typename\n      }\n    }\n':r._g5,'\n  query emodulePractice(\n    $contentItemSlug: String = ""\n    $emoduleSlug: String\n  ) {\n    contentItem(slug: $contentItemSlug) {\n      ... on ContentItemInterface {\n        id\n        slug\n        type\n      }\n    }\n\n    enterpriseModule(slug: $emoduleSlug) {\n      id\n      slug\n    }\n  }\n':r.PwM,"\n  query journeyPractice($journeySlug: String!){\n    journey(slug: $journeySlug){\n      id\n      slug\n    }\n  }\n":r.k6X};function gql(n){var e;return null!==(e=s[n])&&void 0!==e?e:{}}}}]);
//# sourceMappingURL=5573-e2a8cb93736f30b7.js.map